{
    "openapi" : "3.0.0",
    "info" : {
      "version" : "1.0.0",
      "title" : "Pricing Engine Interfaces",
      "description" : "This OpenAPI Document describes the endpoints exposed by Pricing Engine Building Block deployments.  <br> <br> Using this API will allow to calculate the rates and prices for a list billing events and register them on a database using the Pricing Engine and create a response with the value"
    },
    "tags" : [ {
      "name" : "Pricing Management",
      "description" : "Operations to create, modify or delete value"
    }, {
      "name" : "Pricing Calculation",
      "description" : "The Pricing Building Block calculates the values for the billing events"
    } ],
    "paths" : {
      "/pricing/calculate" : {
        "post" : {
          "tags" : [ "Pricing Events Calculation" ],
          "summary" : "Rates and prices for events",
          "description" : "This operation calculates rates and prices for the event received in the JSON Request and then store the value in the database.",
          "responses" : {
            "200" : {
              "description" : "OK",
              "content" : {
                "application/json" : {
                  "schema" : {
                    "type" : "array",
                    "items" : {
                      "$ref" : "#/components/schemas/pricing"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/pricing/" : {
        "parameters" : [ {
          "in" : "header",
          "name" : "Authorization",
          "description" : "JWT or Bearer Token",
          "schema" : {
            "type" : "string"
          }
        } ],
        "get" : {
          "tags" : [ "Pricing Values Management" ],
          "summary" : "List all rates and prices from the database",
          "description" : "This operation lists all rates and prices filtered by event ID. Event ID is extracted from the JSON Request",
          "responses" : {
            "200" : {
              "description" : "OK",
              "content" : {
                "application/json" : {
                  "schema" : {
                    "type" : "array",
                    "items" : {
                      "$ref" : "#/components/schemas/pricing"
                    }
                  }
                }
              }
            }
          }
        },
        "post" : {
          "tags" : [ "Pricing Values Management" ],
          "summary" : "Stores rates and prices reference in the Platform",
          "description" : "This operation stores the rate or price in the database.",
          "requestBody" : {
            "required" : true,
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/manage_pricing"
                }
              }
            }
          },
          "responses" : {
            "200" : {
              "description" : "OK",
              "content" : {
                "application/json" : {
                  "schema" : {
                    "$ref" : "#/components/schemas/pricing"
                  }
                }
              }
            },
            "401" : {
              "description" : "UNAUTHORIZED"
            },
            "404" : {
              "description" : "NOT FOUND"
            }
          }
        }
      },
      "/pricing/{event_id}" : {
        "parameters" : [ {
          "in" : "path",
          "name" : "event_id",
          "description" : "Unique Event ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "header",
          "name" : "Authorization",
          "description" : "JWT or Bearer Token",
          "schema" : {
            "type" : "string"
          }
        } ],
        "get" : {
          "tags" : [ "Pricing Values Management" ],
          "summary" : "Retrieve a specific owned rate or price value",
          "description" : "This operation retrieves the value for the event.",
          "responses" : {
            "200" : {
              "description" : "OK",
              "content" : {
                "application/json" : {
                  "schema" : {
                    "$ref" : "#/components/schemas/pricing"
                  }
                }
              }
            },
            "404" : {
              "description" : "NOT FOUND"
            }
          }
        },
        "put" : {
          "tags" : [ "Pricing Values Management" ],
          "summary" : "Updates an existing rate or price reference in the Platform",
          "description" : "This operation updates an existing value for a specific event.",
          "requestBody" : {
            "required" : true,
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/pricing"
                }
              }
            }
          },
          "responses" : {
            "200" : {
              "description" : "OK"
            },
            "401" : {
              "description" : "UNAUTHORIZED"
            },
            "404" : {
              "description" : "NOT FOUND"
            }
          }
        },
        "delete" : {
          "tags" : [ "Pricing Values Management" ],
          "summary" : "Deletes a value from the database",
          "description" : "This operation removes an existing value owned by the event.",
          "responses" : {
            "200" : {
              "description" : "OK"
            },
            "401" : {
              "description" : "UNAUTHORIZED"
            },
            "404" : {
              "description" : "NOT FOUND"
            }
          }
        }
      }
    },
    "components" : {
      "schemas" : {
        "manage_pricing" : {
          "type" : "object",
          "properties" : {
            "name" : {
              "description" : "Name for the event",
              "type" : "string",
              "example" : "My value for the Event X"
            },
            "value" : {
              "description" : "The value for the event",
              "type" : "integer",
              "example" : "1234"
            }
          }
        },
        "pricing" : {
          "type" : "object",
          "properties" : {
            "event_id" : {
              "description" : "ID of the event",
              "type" : "string",
              "format" : "uuid",
              "example" : "d290f1ee-6c54-4b01-90e6-288571188183"
            }
          }
        }
      }
    }
  }